name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  style:
    name: Style
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Check format
        run: |
          # Make sure to exit with an error if at least one file differs
          git ls-files 'content/*.md' | ( ret=0
            while read -r file
            do
              echo "Checking ${file}"
              diff --color --unified "${file}" <(sed -E 's/[[:blank:]]+$//' "${file}") || ret=$?
            done
            exit ${ret} ) || exit $?
  build:
    name: Build
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install dependencies
        run: |
          sudo apt update || true
          sudo apt --yes --no-install-recommends install hugo
      - name: Build blog
        run: |
          hugo
      - name: Upload blog
        uses: actions/upload-artifact@v3
        with:
          name: blog
          path: public
  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    if: ${{ github.ref == 'refs/heads/master' }}
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: pages
      - name: Download blog
        uses: actions/download-artifact@v3
        with:
          name: blog
          path: blog
      - name: Prepare
        run: |
          rsync --archive --human-readable --verbose --delete --exclude=.git blog/. pages
      - name: Commit
        run: |
          cd pages
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add --all .
          git commit --amend --reset-author --message='Blog for ${{ github.sha }}'
          git push --force
